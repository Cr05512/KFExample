function [A,C,Q,R,Qsys,Rsense,n,m] = modelGen(modelName,T,sigmaQ,sigmaR,sigmaQsys,sigmaRsense)

if strcmpi(modelName,'CV') %Constant velocity

    n = 4;
    
    m = 2;
    
    A = [1 0 T 0;...
         0 1 0 T;...
         0 0 1 0;...
         0 0 0 1];

    C = [1 0 0 0;...  %We observe px and py only
         0 1 0 0];
     
    Q = sigmaQ*[1 0 0 0;...
            0 1 0 0;...
            0 0 0.1 0;...
            0 0 0 0.1]; %Process noise covariance (filter)
        
    R = sigmaR*eye(m); %Measurement noise covariance (filter)
    
    %Sensor noise covariance
    Rsense = sigmaRsense*eye(m);

    %Perturbations on the real system
    Qsys = sigmaQsys*eye(n);
    
elseif strcmpi(modelName,'CA') %Constant acceleration
    
    n = 6;
    
    m = 2;

    A = [1 0 T 0 T^2/2 0;...
         0 1 0 T 0 T^2/2;...
         0 0 1 0 T 0;...
         0 0 0 1 0 T;...
         0 0 0 0 1 0;
         0 0 0 0 0 1];

    C = [1 0 0 0 0 0;...
         0 1 0 0 0 0];
     
    Q = sigmaQ*[1 0 0 0 0 0;...
            0 1 0 0 0 0;...
            0 0 0.1 0 0 0;...
            0 0 0 0.1 0 0;...
            0 0 0 0 0 0;...
            0 0 0 0 0 0];%Process noise covariance (filter)
        
    R = sigmaR*eye(m); %Measurement noise covariance (filter)
    
    %Sensor noise covariance
    Rsense = sigmaRsense*eye(m);

    %Perturbations on the real system
    Qsys = sigmaQsys*[1 0 0 0 0 0;...
                      0 1 0 0 0 0;...
                      0 0 1 0 0 0;...
                      0 0 0 1 0 0;...
                      0 0 0 0 0 0;...
                      0 0 0 0 0 0];
end


end

